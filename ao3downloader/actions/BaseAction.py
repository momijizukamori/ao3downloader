from typing_extensions import Protocol
from typing import Callable, Iterator
from datetime import datetime

from ao3downloader.fileio import FileOps
from ao3downloader.repo import Repository


class BaseAction(Protocol):
    fileops: FileOps

    def log(self, text: str) -> None: ...

    def pages(self) -> int: ...
    
    def link(self) -> str: ...
  
    def images(self) -> bool: ...

    def series(self) -> bool: ...

    def metadata(self) -> bool: ...

    def ignorelist_check_deleted(self) -> bool: ...

    def pinboard_exclude(self) -> bool: ...

    def redownload_oldtypes(self) -> list[str]: ...

    def redownload_newtypes(self) -> list[str]: ...

    def download_types(self) -> list[str]: ...

    def update_types(self) -> list[str]: ...

    def update_folder(self) -> str: ...

    def pinboard_date(self) -> datetime: ...

    def redownload_folder(self) -> str: ...

    def file_path(self) -> str: ...

    def ao3_login(self, repo: Repository, force: bool) -> None: ...

    def progress(self, callback: Callable, iterator: Iterator ) -> None: ...